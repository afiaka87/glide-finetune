[pytest]
# Pytest configuration for GLIDE finetune

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Minimum Python version
minversion = 3.11

# Add src to Python path
pythonpath = src

# Output options
addopts = 
    # Show verbose output
    -v
    # Show extra test summary info
    -ra
    # Strict markers
    --strict-markers
    # Show local variables in tracebacks
    --showlocals
    # Enable assertions
    --assert=plain
    # Coverage options (when running with coverage)
    --cov=src/glide_finetune
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-branch
    # Ignore warnings from dependencies
    --ignore=.venv
    # Parallel execution (adjust based on system)
    -n auto
    # Fail on first error (comment out for full test runs)
    # -x

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    smoke: marks tests as smoke tests
    gpu: marks tests that require GPU
    distributed: marks tests for distributed training
    fp16: marks tests for mixed precision training
    webdataset: marks tests for WebDataset functionality

# Ignore paths
norecursedirs = 
    .git
    .venv
    __pycache__
    *.egg-info
    dist
    build
    docs
    glide-text2im
    scripts
    notebooks

# Coverage configuration
[coverage:run]
source = src/glide_finetune
omit = 
    */tests/*
    */__pycache__/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod